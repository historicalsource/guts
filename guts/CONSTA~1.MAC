; $Id: constants.mac,v 1.24 1997/10/30 21:35:14 shepperd Exp $
;
.if ndf, _CONSTANTS_MAC_
_CONSTANTS_MAC_ == 0
 .if ndf,LANG_C
  .error ;You must .include def_pp.mac before .including constants.mac
 .endc
.if true, OUTPUT_LANG == LANG_C
#if !defined(_CONSTANTS_H_)
#define _CONSTANTS_H_
.endc
;
; Available processors (set the variable PROCESSOR to one of these)
;
	HEX_CONST PROCESSOR_CLASS 0xFFFFFFF0
	HEX_CONST M68000	0x01
	HEX_CONST M68010	0x02
	HEX_CONST M68EC020	0x03
	HEX_CONST M68020	0x03
	HEX_CONST ASAP		0x10
	HEX_CONST MIPS3000	0x20		< MIPS 30x1 processor, big endian >
	HEX_CONST MIPS30x1	0x21		< MIPS 30x1 processor, big endian >
	HEX_CONST MIPS30x1L	0x22		< MIPS 30x1 processor, little endian >
	HEX_CONST MIPS4000	0x30		< MIPS 4000 processor, big endian >
	HEX_CONST MIPS4000L	0x31		< MIPS 4000 processor, little endian >
	HEX_CONST MIPS4600	0x32		< MIPS 4600 processor, big endian >
	HEX_CONST MIPS4600L	0x33		< MIPS 4600 processor, little endian >
	HEX_CONST MIPS4650	0x34		< MIPS 4650 processor, big endian >
	HEX_CONST MIPS4650L	0x35		< MIPS 4650 processor, little endian >
	HEX_CONST MIPS4700	0x36		< MIPS 4700 processor, big endian >
	HEX_CONST MIPS4700L	0x37		< MIPS 4700 processor, little endian >
	HEX_CONST MIPS5000	0x38		< MIPS 5000 processor, big endian >
	HEX_CONST MIPS5000L	0x39		< MIPS 5000 processor, little endian >
	HEX_CONST MIPS4300	0x3A		< MIPS 4300 processor, big endian >
	HEX_CONST MIPS4300L	0x3B		< MIPS 4300 processor, little endian >
	HEX_CONST CX486		0x41		< Cyrix 486/pentium >
;
; Various host boards (set the variable HOST_BOARD to one of these)
;
	HEX_CONST HOST_BOARD_CLASS 0xFFFFFFF0
	HEX_CONST EC020cojag	1*0x10		< McKee's low cost EC020 host board, CoJag version >
	HEX_CONST EC020zoid10	2*0x10		< McKee's low cost EC020 host board, Zoid 10 version >
	HEX_CONST EC020zoid20	3*0x10		< McKee's low cost EC020 host board, Zoid 20 version >
	HEX_CONST MCUBE		4*0x10		< Mokris's 68k based host board >
	HEX_CONST ASCLEAP	5*0x10		< The ASAP based ASCLEAP >
	HEX_CONST LCR3K		6*0x10		< Low cost R3k host board >
	HEX_CONST IDT3xEVAL	7*0x10		< IDT's 3000 eval board with XBUS adapter >
	HEX_CONST IDT4xEVAL	8*0x10		< IDT's 4000 eval board with XBUS adapter >
	HEX_CONST MB4600	9*0x10		< Senthil and Mark's 4600 MathBox board >
	HEX_CONST HCR4K		10*0x10		< Senthil and Mark's 4600 Host board >
	HEX_CONST PSX		11*0x10		< Sony PSX >
	HEX_CONST PHOENIX	12*0x10+0	< WMS Host board >
	HEX_CONST PHOENIX_AD	12*0x10+1	< WMS Phoenix-AD board (Hockey) board >
	HEX_CONST FLAGSTAFF	12*0x10+2	< WMS Phoenix-Flagstaff (Rush) board >
	HEX_CONST SEATTLE	12*0x10+3	< WMS Phoenix-Seattle (Mace/CSpeed/Genocide) board >
	HEX_CONST VEGAS		12*0x10+4	< WMS Phoenix-Vegas (?) board >
	HEX_CONST CHAMELEON	12*0x10+5	< WMS Chameleon board >
	HEX_CONST CYRIX_MGX	13*0x10+0	< Cyrix Media/GX >
;
; Various video boards (set the variable VIDEO_BOARD to one of these)
;
	HEX_CONST ZOID10_V	1		< Zoid 10 stack		>
	HEX_CONST ZOID20_V	2		< Zoid 20 stack 	>
	HEX_CONST COJAG_V	3		< CoJag stack 		>
	HEX_CONST GX1_V		4		< FSG42 board		>
	HEX_CONST GX2_V		5		< GX2 board		>
	HEX_CONST GT_V		6		< GT board		>
	HEX_CONST SST_V		7		< 3DFX video board	>
	HEX_CONST PSX_V		8		< Sony PSX >
	HEX_CONST CYRIX_MGX_V	9		< Cyrix Media/GX >
;
; Various game id's (set the variable COJAG_GAME to one of these)
;
	HEX_CONST COJAG_PROTO	0x01		< Non-Game specific running on COJAG >
	HEX_CONST COJAG_HERO	0x02		< Hero on COJAG >
	HEX_CONST COJAG_AREA51	0x04		< Area 51 on COJAG >
	HEX_CONST COJAG_RAGE	0x08		< RAGE 2 on COJAG >
	HEX_CONST COJAG_FISH	0x10		< Tropical Fish on COJAG >
;
; Various game id's (set the variable ZOID_GAME to one of these)
;
	HEX_CONST ZOID_PROTO	0x01		< Non-Game specific running on ZOID >
	HEX_CONST ZOID_HOCKEY	0x02		< Wayne Gretzky Hocky running on ZOID >
	HEX_CONST ZOID_GAUNTLET	0x04		< 3D Gauntlet running on ZOID >
	HEX_CONST ZOID20_DIAG	0x08		< Mike Albaugh developing ZOID 20 >
	HEX_CONST ZOID_RUSH	0x10		< SF Rush running on ZOID >
	HEX_CONST ZOID_MACE	0x20		< Mace running on ZOID >
	HEX_CONST ZOID20_DMS	0x40		< Dave Shepperd test ZOID >
;
; Various game id's (set the variable SST_GAME to one of these)
;
	HEX_CONST SST_PROTO	0x01		< Non-Game specific running on 3DFX >
	HEX_CONST SST_DMS	0x02		< Dave Shepperd test 3DFX >
	HEX_CONST SST_RUSH	0x04		< RUSH 3DFX >
	HEX_CONST SST_HOCKEY	0x08		< Hockey 3DFX >
	HEX_CONST SST_MACE	0x10		< Mace 3DFX >
	HEX_CONST SST_SPEED	0x20		< Speed 3DFX >
	HEX_CONST SST_STAR	0x40		< Star (working title) 3DFX >
	HEX_CONST SST_JUKO	0x80		< Juko Thread 3DFX >
	HEX_CONST SST_GENO	0x100		< Genocide 3DFX >
	HEX_CONST SST_GAUNTLET	0x200		< 3Dfx Gauntlet >
	HEX_CONST SST_CRASH	0x400		< Crash (game) 3DFX >
	HEX_CONST SST_AIRRACE	0x800		< AirRace 3DFX (Blueshift) >
;
; Various game id's (set the variable PSX_GAME to one of these)
;
	HEX_CONST PSX_PROTO	0x01		< Non-Game specific running on PSX >
	HEX_CONST PSX_RAGE2	0x02		< Primal Rage II on PSX >
;
; Various game id's (set the variable CYRIX_GAME to one of these)
;
	HEX_CONST CYRIX_BLOODLUST 0x01		< Bloodlust >
;
	HEX_CONST TRUE	1
	HEX_CONST FALSE	0
;
	HEX_CONST ABORT	0
	HEX_CONST FAIL	-1
;
	HEX_CONST IDE_COJAG	0x01		< For IDE on COJAG boards >
	HEX_CONST IDE_STREAM	0x02		< For IDE on STREAM boards >
	HEX_CONST IDE_PCI	0x03		< For IDE on PCI bus >
	HEX_CONST IDE_PSX	0x04		< For IDE on PSeXtra >
;
 .if ndf,ANSI_OK
	HEX_CONST ANSI_OK	1
 .endc
.if true, OUTPUT_LANG == LANG_C
#endif			/* _CONSTANTS_H_ */
.endc
.endc			; _CONSTANTS_MAC_
